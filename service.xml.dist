<?xml version="1.0" ?>

<container
        xmlns="http://symfony.com/schema/dic/services"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd"
>

    <!--
        Imports will load the submodules of this plugin. Just remove / uncomment modules, you don't need
    -->
    <imports>
        <!-- Use NumberRanges from Redis -->
        <import resource="RedisNumberRange/service.xml"/>
        <!-- Use Redis as HTTP cache backend -->
        <import resource="RedisStore/service.xml"/>
        <!-- Additional caching for shops without HTTP cache -->
        <import resource="Caching/service.xml"/>
        <!-- Invalidate multiple appserver right from the backend -->
        <import resource="CacheMultiplexer/service.xml"/>
        <!-- Use multiple read databases -->
        <import resource="PrimaryReplica/service.xml"/>
        <!-- Store ListProducts in Redis -->
        <import resource="RedisProductGateway/service.xml"/>
    </imports>

    <parameters>
        <!--
             Warning: Disallow access from outside or consider storing credentials in environment variables!
             See: http://symfony.com/doc/current/configuration/external_parameters.html#environment-variables
             E.g.

             fastcgi_param:
                 fastcgi_param SYMFONY__HOST1__HOST user;
                 fastcgi_param SYMFONY__HOST1__USER user;
                 fastcgi_param SYMFONY__HOST1__PASSWORD secret;
             service.xml:
                 <parameter type="collection">
                     <parameter key="host">%host1.host%</parameter>
                     <parameter key="user">%host1.user%</parameter>
                     <parameter key="password">%host1.password%</parameter>
                 </parameter>
        -->

        <!--
            Cache Multiplexer
            Each Appserver can be configured with its API route. In this case, two appserver are configured
        -->
        <parameter key="swag_essentials.cache_multiplexer_hosts" type="collection">
                <parameter type="collection">
                    <parameter key="host">http://172.16.0.1/api</parameter>
                    <parameter key="user">demo</parameter>
                    <parameter key="password">89e495e7941cf9e40e6980d14a16bf023ccd4c91</parameter>
                </parameter>
                <parameter type="collection">
                    <parameter key="host">http://172.16.0.2/api</parameter>
                    <parameter key="user">demo</parameter>
                    <parameter key="password">89e495e7941cf9e40e6980d14a16bf023ccd4c91</parameter>
                </parameter>                
        </parameter>


        <!--
            Redis
        -->
        <parameter key="swag_essentials.redis" type="collection">
            <parameter type="collection">
                <parameter key="host">cluster-lb</parameter>
                <parameter key="port">6379</parameter>
                <parameter key="persistent">true</parameter>
                <parameter key="dbindex">0</parameter>
                <parameter key="auth">%redis.password%</parameter>
            </parameter>
        </parameter>

        <!--
            Caching
        -->
        <!-- Enable / disable caches -->
        <parameter key="swag_essentials.caching_enable_urls">1</parameter>
        <parameter key="swag_essentials.caching_enable_list_product">1</parameter>
        <parameter key="swag_essentials.caching_enable_product">1</parameter>
        <parameter key="swag_essentials.caching_enable_search">1</parameter>

        <!-- TTL configs -->
        <parameter key="swag_essentials.caching_ttl_urls">3600</parameter>
        <parameter key="swag_essentials.caching_ttl_list_product">3600</parameter>
        <parameter key="swag_essentials.caching_ttl_product">3600</parameter>
        <parameter key="swag_essentials.caching_ttl_search">3600</parameter>
    </parameters>

    <services>
        <service id="swag_essentials.redis.factory" class="SwagEssentials\Common\RedisFactory">
        </service>

        <service id="swag_essentials.redis" class="Redis">
            <factory service="swag_essentials.redis.factory" method="factory" />
            <argument>%swag_essentials.redis%</argument>
        </service>
    </services>

</container>
