variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: "/certs"
    MYSQL_ROOT_PASSWORD: root
    GIT_STRATEGY: clone
    WEB_DOCUMENT_ROOT: $CI_PROJECT_DIR/
    COMPOSER_HOME: $CI_PROJECT_DIR/.composer

stages:
    - Static analysis
    - Test

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - .composer

# CsFixer
Php Cs Fixer:
    stage: Static analysis
    image: webdevops/php-apache:7.3
    before_script:
        - composer install --working-dir=tools
    script:
        - cd tools && ./php-cs-fixer fix --dry-run -v --allow-risky=yes --format=junit --config ../.php_cs | tee php-cs-fixer.xml
    artifacts:
        expire_in: 1 week
        paths:
            - php-cs-fixer.xml

# base unit
ParallelUnit:
    stage: Test
    image: $IMAGE
    services:
        - name: mysql:8.0
          alias: mysql
          command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--default-authentication-plugin=mysql_native_password"]
        - name: redis:latest
          alias: app_redis
    parallel:
        matrix:
            - SHOPWARE_VERSION: [ "5.6.6", "5.6.9" ]
              IMAGE: [ 'shopware/5-continuous:7.3', 'shopware/5-continuous:7.2', 'shopware/5-continuous:7.4' ]
    before_script:
        - apt-install default-mysql-client
        - composer install --working-dir=tools
        - ./psh.phar init --SW-VERSION=${SHOPWARE_VERSION}
    script:
        - ./psh.phar unit